name: CI/CD Deploy TodoApp

on:
  push:
    branches: [ "main" ]
    paths:
      - "todoapp/**"           # 👈 чтобы запускалось только при изменениях внутри todoapp
      - ".github/workflows/deploy-todoapp.yml"

env:
  IMAGE_NAME: almuko/todoapp   # 👈 ваш репозиторий DockerHub

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./todoapp     # 👈 путь к коду
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  migrate:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Setup Kubeconfig
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          cat > $HOME/.kube/config <<'EOF'
          ${{ secrets.KUBECONFIG }}
          EOF

      - name: Run Goose migrations for TodoApp
        run: |
          kubectl apply -f k8s/todoapp-migrate.yaml
          kubectl wait --for=condition=complete job/todoapp-migrate -n default --timeout=120s || true

  deploy:
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Setup Kubeconfig
        shell: bash
        run: |
          mkdir -p $HOME/.kube
          cat > $HOME/.kube/config <<'EOF'
          ${{ secrets.KUBECONFIG }}
          EOF

      - name: Deploy TodoApp
        run: |
          kubectl apply -f k8s/todoapp.yaml
          kubectl rollout status deployment/todoapp -n default
